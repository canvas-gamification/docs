"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6929],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9154:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],s={sidebar_position:2},l="Test Classes",u={unversionedId:"junit-framework/writing-tests",id:"junit-framework/writing-tests",title:"Test Classes",description:"The tests you write will need to be contained within a test class. Using our framework will require you to extend one of our built-in test classes. Currently, that means extending either BaseTest or BaseRandomTest.",source:"@site/docs/junit-framework/writing-tests.md",sourceDirName:"junit-framework",slug:"/junit-framework/writing-tests",permalink:"/docs/docs/junit-framework/writing-tests",editUrl:"https://github.com/canvas-gamification/docs/docs/junit-framework/writing-tests.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"`Random` Questions",permalink:"/docs/docs/junit-framework/introduction/implementing-tests/random-questions"},next:{title:"Intro to Clauses",permalink:"/docs/docs/junit-framework/clauses/"}},c=[{value:"BaseTest",id:"basetest",children:[],level:2},{value:"BaseRandomTest",id:"baserandomtest",children:[],level:2},{value:"Setting up a test class",id:"setting-up-a-test-class",children:[{value:"testSentence()",id:"testsentence",children:[],level:3},{value:"runMain()",id:"runmain",children:[],level:3}],level:2}],p={toc:c};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"test-classes"},"Test Classes"),(0,i.kt)("p",null,"The tests you write will need to be contained within a test class. Using our framework will require you to extend one of our built-in test classes. Currently, that means extending either ",(0,i.kt)("inlineCode",{parentName:"p"},"BaseTest")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"BaseRandomTest"),"."),(0,i.kt)("h2",{id:"basetest"},"BaseTest"),(0,i.kt)("p",null,"This is used for all tests."),(0,i.kt)("p",null,"What it tests:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},'That the output of the program matches the structure defined by the "Test Sentence".')),(0,i.kt)("h2",{id:"baserandomtest"},"BaseRandomTest"),(0,i.kt)("p",null,"This is used when your test contains random clauses (i.e. ",(0,i.kt)("inlineCode",{parentName:"p"},"RandomInteger"),")."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note: ",(0,i.kt)("inlineCode",{parentName:"p"},"BaseRandomTest")," extends ",(0,i.kt)("inlineCode",{parentName:"p"},"BaseTest")," so all functionality from ",(0,i.kt)("inlineCode",{parentName:"p"},"BaseTest")," remains even if you use ",(0,i.kt)("inlineCode",{parentName:"p"},"BaseRandomTest"),".")),(0,i.kt)("p",null,"What it tests:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Everything that ",(0,i.kt)("inlineCode",{parentName:"li"},"BaseTest")," does."),(0,i.kt)("li",{parentName:"ol"},"That random values in the output behave randomly within their boundaries (i.e. Check that a ",(0,i.kt)("inlineCode",{parentName:"li"},"RandomInteger(1, 10)")," is actually random and not just hardcoded)."),(0,i.kt)("li",{parentName:"ol"},"That random values in the output are always within their set ranges (i.e. Check that a ",(0,i.kt)("inlineCode",{parentName:"li"},"RandomInteger(1, 10)")," is within the range ",(0,i.kt)("inlineCode",{parentName:"li"},"[1-10)"),").")),(0,i.kt)("h2",{id:"setting-up-a-test-class"},"Setting up a test class"),(0,i.kt)("p",null,"Regardless of which test class you extended, there are 2 methods you absolutely ",(0,i.kt)("em",{parentName:"p"},"must")," specify. Your IDE should warn you if you forget, though. These 2 mandatory methods are:\n",(0,i.kt)("inlineCode",{parentName:"p"},"public Clause[] testSentence()")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"public void runMain()")),(0,i.kt)("h3",{id:"testsentence"},"testSentence()"),(0,i.kt)("p",null,"This should return an array of ",(0,i.kt)("inlineCode",{parentName:"p"},"Clause")," objects specifying the structure of the output the program should create.\nExample:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public Clause[] testSentence() {\n    return new Clause[]{\n        new StringLiteral("This is a random test with retrieval."),\n        new NewLine(),\n        new RandomInteger(5, 10, "important number"),\n    };\n}\n')),(0,i.kt)("h3",{id:"runmain"},"runMain()"),(0,i.kt)("p",null,"This method should simply call and run the main method of the class you are intending to test. For example, let's say we want to test the output of a class called ",(0,i.kt)("inlineCode",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public void runMain() {\n    Example.main(new String[0]);\n}\n")))}d.isMDXComponent=!0}}]);