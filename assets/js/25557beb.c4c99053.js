"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5705],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),m=l(n),d=i,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||a;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u.mdxType="string"==typeof e?e:i,o[1]=u;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8215:function(e,t,n){var r=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,i=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:i},t)}},9877:function(e,t,n){n.d(t,{Z:function(){return c}});var r=n(7462),i=n(7294),a=n(2389),o=n(9548),u=n(6010),s="tabItem_LplD";function l(e){var t,n,a,l=e.lazy,c=e.block,p=e.defaultValue,m=e.values,d=e.groupId,f=e.className,h=i.Children.map(e.children,(function(e){if((0,i.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=m?m:h.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),k=(0,o.lx)(v,(function(e,t){return e.value===t.value}));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var g=null===p?p:null!=(t=null!=p?p:null==(n=h.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(a=h[0])?void 0:a.props.value;if(null!==g&&!v.some((function(e){return e.value===g})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=(0,o.UB)(),w=b.tabGroupChoices,y=b.setTabGroupChoices,N=(0,i.useState)(g),j=N[0],O=N[1],T=[],x=(0,o.o5)().blockElementScrollPositionUntilNextRender;if(null!=d){var E=w[d];null!=E&&E!==j&&v.some((function(e){return e.value===E}))&&O(E)}var q=function(e){var t=e.currentTarget,n=T.indexOf(t),r=v[n].value;r!==j&&(x(t),O(r),null!=d&&y(d,r))},C=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=T.indexOf(e.currentTarget)+1;n=T[r]||T[0];break;case"ArrowLeft":var i=T.indexOf(e.currentTarget)-1;n=T[i]||T[T.length-1]}null==(t=n)||t.focus()};return i.createElement("div",{className:"tabs-container"},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":c},f)},v.map((function(e){var t=e.value,n=e.label,a=e.attributes;return i.createElement("li",(0,r.Z)({role:"tab",tabIndex:j===t?0:-1,"aria-selected":j===t,key:t,ref:function(e){return T.push(e)},onKeyDown:C,onFocus:q,onClick:q},a,{className:(0,u.Z)("tabs__item",s,null==a?void 0:a.className,{"tabs__item--active":j===t})}),null!=n?n:t)}))),l?(0,i.cloneElement)(h.filter((function(e){return e.props.value===j}))[0],{className:"margin-vert--md"}):i.createElement("div",{className:"margin-vert--md"},h.map((function(e,t){return(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==j})}))))}function c(e){var t=(0,a.Z)();return i.createElement(l,(0,r.Z)({key:String(t)},e))}},7887:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return c},default:function(){return m}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=(n(9877),n(8215),["components"]),u={},s="Questions requiring input from the user",l={unversionedId:"junit-framework/introduction/implementing-tests/input-questions",id:"junit-framework/introduction/implementing-tests/input-questions",title:"Questions requiring input from the user",description:"These questions require Scanner input from the user and use the inputted values to calculate/print the correct output.",source:"@site/docs/junit-framework/introduction/implementing-tests/input-questions.mdx",sourceDirName:"junit-framework/introduction/implementing-tests",slug:"/junit-framework/introduction/implementing-tests/input-questions",permalink:"/docs/docs/junit-framework/introduction/implementing-tests/input-questions",editUrl:"https://github.com/canvas-gamification/docs/docs/junit-framework/introduction/implementing-tests/input-questions.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Conditional Questions",permalink:"/docs/docs/junit-framework/introduction/implementing-tests/conditional-questions"},next:{title:"Questions with iteration",permalink:"/docs/docs/junit-framework/introduction/implementing-tests/iteration-questions"}},c=[{value:"Why is it hard to test this?",id:"why-is-it-hard-to-test-this",children:[],level:2},{value:"How do I test this?",id:"how-do-i-test-this",children:[],level:2},{value:"Example",id:"example",children:[],level:2}],p={toc:c};function m(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"questions-requiring-input-from-the-user"},"Questions requiring input from the user"),(0,a.kt)("p",null,"These questions require Scanner input from the user and use the inputted values to calculate/print the correct output."),(0,a.kt)("h2",{id:"why-is-it-hard-to-test-this"},"Why is it hard to test this?"),(0,a.kt)("p",null,"Not only do these questions require output format checking, but they also require input values, where the output values calculated might change depending on the input values. This is why multiple cases need to be tested, which is extremely tedious and redundant when working with Vanilla JUnit 5. With the framework, this is no longer necessary, and we can re-run the same test multiple times with different input values."),(0,a.kt)("h2",{id:"how-do-i-test-this"},"How do I test this?"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Test Class"),": Create a class that extends the ",(0,a.kt)("inlineCode",{parentName:"li"},"BaseTest")," class."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Test Sentence"),": Create the ",(0,a.kt)("a",{parentName:"li",href:"/docs/docs/junit-framework/writing-tests#testsentence"},(0,a.kt)("inlineCode",{parentName:"a"},"testSentence()"))," method with the output format as an array of ",(0,a.kt)("a",{parentName:"li",href:"/docs/docs/junit-framework/clauses/"},(0,a.kt)("inlineCode",{parentName:"a"},"Clause"))," objects."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Setup Test Options"),": For any test that takes in input, the test writer must specify two values available in the ",(0,a.kt)("a",{parentName:"li",href:"/docs/docs/junit-framework/input-tests/test-option"},(0,a.kt)("inlineCode",{parentName:"a"},"TestOption"))," class. These options also include setting the default input."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Call Main"),": Call the main method of the test class by implementing the ",(0,a.kt)("a",{parentName:"li",href:"/docs/docs/junit-framework/writing-tests#runmain"},(0,a.kt)("inlineCode",{parentName:"a"},"runMain()"))," method."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Set up input cases"),": Write input providers that are a stream of input values used to run the code with multiple input. Refer to ",(0,a.kt)("a",{parentName:"li",href:"/docs/docs/junit-framework/input-tests/parameterized-testing"},"Parameterized Testing")," for more information."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Retrieve Values"),": Retrieve output values based on the format. See ",(0,a.kt)("a",{parentName:"li",href:"/docs/docs/junit-framework/retrieving-values"},"Retrieving Values")," for more information."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Additional Tests"),": Depending on the question, you may need to create additional tests to ensure values are calculated correctly.")),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("p",null,"Refer to ",(0,a.kt)("a",{parentName:"p",href:"/docs/docs/junit-framework/input-tests/full-example#sample-input-test"},"Sample Input Test")," for an example of how to write an input test."))}m.isMDXComponent=!0}}]);